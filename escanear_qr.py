import streamlit as st
from pyzbar import pyzbar
import numpy as np
from PIL import Image

def decodificar_qr_imagen(imagen_pil):
    """Decodificar QR de una imagen usando solo PIL y pyzbar"""
    try:
        # Convertir PIL a array numpy
        imagen_array = np.array(imagen_pil)
        
        # Detectar c√≥digos QR directamente
        codigos = pyzbar.decode(imagen_array)
        
        resultados = []
        for codigo in codigos:
            # Decodificar el texto
            texto = codigo.data.decode('utf-8')
            resultados.append(texto)
        
        return resultados
    except Exception as e:
        st.error(f"Error decodificando QR: {e}")
        return []

def mostrar_escaner_qr():
    """Funci√≥n principal del esc√°ner QR"""
    st.title("üì± Esc√°ner de C√≥digos QR")
    st.write("Escanea c√≥digos QR subiendo una imagen o usando la c√°mara")
    
    # Tabs para diferentes m√©todos
    tab1, tab2 = st.tabs(["üì∑ C√°mara", "üìÅ Subir Imagen"])
    
    with tab1:
        st.subheader("üì∑ Esc√°ner con C√°mara")
        
        # Usar camera_input de Streamlit
        foto_camara = st.camera_input("Toma una foto del c√≥digo QR")
        
        if foto_camara is not None:
            # Procesar imagen de la c√°mara
            imagen = Image.open(foto_camara)
            
            col1, col2 = st.columns([1, 1])
            
            with col1:
                st.image(imagen, caption="Foto tomada", use_column_width=True)
            
            with col2:
                st.write("**Procesando imagen...**")
                
                # Decodificar QR
                with st.spinner("Escaneando c√≥digo QR..."):
                    resultados = decodificar_qr_imagen(imagen)
                
                if resultados:
                    st.success(f"‚úÖ Se encontraron {len(resultados)} c√≥digo(s) QR")
                    
                    for i, codigo in enumerate(resultados):
                        st.markdown(f"### üì± QR {i+1}:")
                        
                        # Mostrar el c√≥digo en una caja destacada
                        st.markdown(f"""
                        <div style="
                            background-color: #f0f2f6; 
                            padding: 15px; 
                            border-radius: 10px; 
                            border-left: 4px solid #DC143C;
                            margin: 10px 0;
                        ">
                            <strong>C√≥digo detectado:</strong><br>
                            <code style="font-size: 16px;">{codigo}</code>
                        </div>
                        """, unsafe_allow_html=True)
                        
                        # Tambi√©n mostrar en formato c√≥digo
                        st.code(codigo)
                        
                else:
                    st.error("‚ùå No se detectaron c√≥digos QR en la imagen")
                    st.info("üí° Toma otra foto asegur√°ndote de que el c√≥digo QR est√© claro y centrado")
        
        # Instrucciones para la c√°mara
        st.markdown("""
        ### üìã Instrucciones:
        1. **Haz clic en "Take Photo"** para activar la c√°mara
        2. **Apunta la c√°mara** hacia el c√≥digo QR  
        3. **Aseg√∫rate** de que el c√≥digo est√© centrado y enfocado
        4. **Toma la foto** haciendo clic en el bot√≥n de captura
        5. **Espera** a que se procese autom√°ticamente
        """)
    
    with tab2:
        st.subheader("üìÅ Subir Imagen con QR")
        
        # Subir imagen
        archivo_imagen = st.file_uploader(
            "Selecciona una imagen que contenga un c√≥digo QR",
            type=['png', 'jpg', 'jpeg', 'bmp', 'tiff'],
            help="Formatos soportados: PNG, JPG, JPEG, BMP, TIFF"
        )
        
        if archivo_imagen is not None:
            # Mostrar imagen subida
            imagen = Image.open(archivo_imagen)
            
            col1, col2 = st.columns([1, 1])
            
            with col1:
                st.image(imagen, caption="Imagen subida", use_column_width=True)
            
            with col2:
                st.write("**Procesando imagen...**")
                
                # Decodificar QR
                with st.spinner("Escaneando c√≥digo QR..."):
                    resultados = decodificar_qr_imagen(imagen)
                
                if resultados:
                    st.success(f"‚úÖ Se encontraron {len(resultados)} c√≥digo(s) QR")
                    
                    for i, codigo in enumerate(resultados):
                        st.markdown(f"### üì± QR {i+1}:")
                        
                        # Mostrar el c√≥digo en una caja destacada
                        st.markdown(f"""
                        <div style="
                            background-color: #f0f2f6; 
                            padding: 15px; 
                            border-radius: 10px; 
                            border-left: 4px solid #DC143C;
                            margin: 10px 0;
                        ">
                            <strong>C√≥digo detectado:</strong><br>
                            <code style="font-size: 16px;">{codigo}</code>
                        </div>
                        """, unsafe_allow_html=True)
                        
                        # Tambi√©n mostrar en formato c√≥digo
                        st.code(codigo)
                        
                else:
                    st.error("‚ùå No se detectaron c√≥digos QR en la imagen")
                    st.info("üí° Aseg√∫rate de que la imagen contenga un c√≥digo QR claro y legible")
    
    # Informaci√≥n adicional
    with st.expander("üí° Consejos para mejores resultados"):
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            **üì∑ Para la c√°mara:**
            - Mant√©n el c√≥digo QR bien iluminado
            - Evita reflejos y sombras  
            - Centra el c√≥digo en la imagen
            - Mant√©n distancia adecuada (15-30cm)
            """)
        
        with col2:
            st.markdown("""
            **üìÅ Para im√°genes:**
            - Usa im√°genes de buena calidad
            - Aseg√∫rate de que el QR est√© completo
            - Evita im√°genes borrosas
            - Formatos: PNG, JPG, JPEG, BMP, TIFF
            """)
    
    # Estad√≠sticas (opcional)
    st.markdown("---")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("üì± QRs Escaneados Hoy", "0", help="Contador en desarrollo")
    with col2:
        st.metric("‚úÖ √âxito de Escaneo", "100%", help="Tasa de √©xito")
    with col3:
        st.metric("‚ö° Tiempo Promedio", "< 1s", help="Velocidad de procesamiento")

if __name__ == "__main__":
    mostrar_escaner_qr()