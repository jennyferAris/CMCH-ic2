import streamlit as st
from streamlit_option_menu import option_menu
from base_datos import mostrar_base_datos
import json

st.set_page_config(page_title="Sistema de Inventario", layout="wide")

# Funci√≥n para cargar roles desde secrets
@st.cache_data
def cargar_roles():
    try:
        roles_data = json.loads(st.secrets["roles_autorizados"]["data"])
        return roles_data
    except Exception as e:
        st.error(f"Error al cargar roles: {e}")
        return {}

# Funci√≥n para obtener informaci√≥n del rol
def obtener_info_rol(email, roles_data):
    if email in roles_data:
        return {
            "nombre": roles_data[email][0],
            "nivel": roles_data[email][1]
        }
    return None

# Funci√≥n para mostrar la pantalla de login
def mostrar_login():
    st.markdown("""
    <div style="text-align: center; padding: 50px;">
        <h1>üè• PLATAFORMA DEL DEPARTAMENTO DE INGENIER√çA CL√çNICA</h1>
        <h2>Cl√≠nica M√©dica Cayetano Heredia</h2>
        <br>
        <h3>Sistema de Inventario de Equipos M√©dicos</h3>
        <br>
        <p style="font-size: 18px; color: #666;">
            Bienvenido al sistema de gesti√≥n de inventario m√©dico.<br>
            Para continuar, inicia sesi√≥n con tu cuenta autorizada.
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    # Crear columnas para centrar el bot√≥n
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        if st.button("üîë Ingresar con Google", 
                    type="primary", 
                    use_container_width=True,
                    help="Haz clic para iniciar sesi√≥n con tu cuenta de Google"):
            st.login("google")
    
    st.markdown("""
    <div style="text-align: center; margin-top: 50px; padding: 20px; 
                background-color: #f0f2f6; border-radius: 10px;">
        <h4>‚ÑπÔ∏è Informaci√≥n importante</h4>
        <p>‚Ä¢ Solo las cuentas autorizadas pueden acceder al sistema</p>
        <p>‚Ä¢ Contacta al administrador si necesitas acceso</p>
        <p>‚Ä¢ Aseg√∫rate de usar tu cuenta institucional</p>
    </div>
    """, unsafe_allow_html=True)

# Verificar si el usuario est√° logueado
if not st.user.is_logged_in:
    mostrar_login()
    st.stop()

# Cargar roles desde secrets
roles_data = cargar_roles()

# El resto del c√≥digo se ejecuta solo si el usuario est√° logueado
st.title("PLATAFORMA DEL DEPARTAMENTO DE INGENIER√çA CL√çNICA")

email = st.user.email
name = st.user.name
rol_info = obtener_info_rol(email, roles_data)

# Acceso denegado si el correo no est√° en la lista
if rol_info is None:
    st.error("üö´ Acceso denegado. Tu cuenta no est√° autorizada.")
    st.info(f"üìß Cuenta utilizada: {email}")
    st.warning("Si crees que esto es un error, contacta al administrador del sistema.")
    
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üîÑ Intentar con otra cuenta"):
            st.logout()
    with col2:
        if st.button("üìû Contactar Administrador"):
            st.info("Contacta a: daang0406@gmail.com")
    st.stop()

# Extraer informaci√≥n del rol
rol_nombre = rol_info["nombre"]
rol_nivel = rol_info["nivel"]

# Sidebar con men√∫
with st.sidebar:
    st.markdown(f"""
    üë§ **{name}**  
    üìß {email}  
    üõ°Ô∏è Rol: `{rol_nombre}`  
    üèÜ Nivel: `{rol_nivel}`
    """)
    
    # Separador visual
    st.markdown("---")
    
    menu = option_menu(
        menu_title="Men√∫ Principal",
        options=["Inicio", "Ver Base de Datos", "Perfil", "Configuraci√≥n"],
        icons=["house", "database", "person", "gear"],
        default_index=0
    )

# Secci√≥n de inicio
if menu == "Inicio":
    st.title("üè• Bienvenido al Sistema de Inventario")
    
    # Mensaje personalizado seg√∫n el nivel del usuario
    if rol_nivel >= 4:
        st.success(f"üë®‚Äçüíº Bienvenido {rol_nombre}. Tienes acceso completo al sistema.")
    elif rol_nivel >= 2:
        st.info(f"üë®‚Äçüîß Bienvenido {rol_nombre}. Tienes acceso de consulta y edici√≥n.")
    else:
        st.info(f"üë®‚Äçüéì Bienvenido {rol_nombre}. Tienes acceso de consulta.")
    
    st.write("Navega usando el men√∫ lateral para ver y gestionar los equipos m√©dicos.")
    
    # Mostrar permisos seg√∫n el nivel
    with st.expander("Ver permisos de tu rol"):
        if rol_nivel >= 5:
            st.write("‚úÖ Administraci√≥n completa del sistema")
            st.write("‚úÖ Gesti√≥n de usuarios y roles")
            st.write("‚úÖ Acceso a todas las funcionalidades")
        elif rol_nivel >= 4:
            st.write("‚úÖ Gesti√≥n completa de inventario")
            st.write("‚úÖ Generar reportes avanzados")
            st.write("‚úÖ Configuraci√≥n del sistema")
        elif rol_nivel >= 3:
            st.write("‚úÖ Editar informaci√≥n de equipos")
            st.write("‚úÖ Generar reportes b√°sicos")
            st.write("‚úÖ Consultar base de datos")
        else:
            st.write("‚úÖ Consultar base de datos")
            st.write("‚ùå Edici√≥n limitada")

# Secci√≥n de base de datos
elif menu == "Ver Base de Datos":
    mostrar_base_datos()

# Perfil
elif menu == "Perfil":
    st.title("üë§ Perfil del Usuario")
    
    col1, col2 = st.columns([1, 2])
    
    with col1:
        if st.user.picture:
            st.image(st.user.picture, width=150)
        else:
            st.info("Sin foto de perfil")
    
    with col2:
        st.markdown(f"""
        **Informaci√≥n Personal:**
        - **Nombre:** {name}
        - **Correo:** {email}
        - **Rol:** {rol_nombre}
        - **Nivel de acceso:** {rol_nivel}
        """)
    
    # Informaci√≥n adicional del token
    with st.expander("Ver informaci√≥n t√©cnica completa"):
        st.json({
            "user_info": st.user.to_dict(),
            "role_info": rol_info
        })

# Configuraci√≥n
elif menu == "Configuraci√≥n":
    st.title("‚öôÔ∏è Configuraci√≥n")
    
    if rol_nivel >= 4:
        st.success("Tienes permisos para modificar la configuraci√≥n del sistema.")
        st.write("Aqu√≠ ir√°n las opciones de configuraci√≥n personalizadas.")
        
        # Ejemplo de configuraciones seg√∫n el nivel
        if rol_nivel >= 5:
            st.subheader("Configuraci√≥n de Administrador")
            st.write("- Gesti√≥n de usuarios")
            st.write("- Configuraci√≥n de la base de datos")
            st.write("- Respaldos del sistema")
        
        st.subheader("Configuraci√≥n Personal")
        st.write("- Preferencias de visualizaci√≥n")
        st.write("- Notificaciones")
        st.write("- Idioma")
    else:
        st.warning("No tienes permisos suficientes para acceder a la configuraci√≥n.")
        st.info("Contacta a un administrador si necesitas cambiar alguna configuraci√≥n.")

# Logout
if st.sidebar.button("Cerrar sesi√≥n"):
    st.logout()